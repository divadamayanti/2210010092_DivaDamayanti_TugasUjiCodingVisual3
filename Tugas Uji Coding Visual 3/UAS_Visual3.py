# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UAS_Visual3.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as mc
from PyQt5.QtWidgets import QTableWidgetItem


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(575, 458)
        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 0, 101, 171))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(110, 0, 341, 171))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_2.addWidget(self.lineEdit_2)
        self.lineEdit = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_2.addWidget(self.lineEdit)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.verticalLayout_2.addWidget(self.lineEdit_3)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.verticalLayout_2.addWidget(self.lineEdit_4)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.verticalLayout_2.addWidget(self.lineEdit_5)
        self.label_6 = QtWidgets.QLabel(Form)
        self.label_6.setGeometry(QtCore.QRect(10, 230, 541, 16))
        self.label_6.setObjectName("label_6")
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(10, 250, 541, 192))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.horizontalLayoutWidget = QtWidgets.QWidget(Form)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 180, 541, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.pushButton_10 = QtWidgets.QPushButton(Form)
        self.pushButton_10.setGeometry(QtCore.QRect(470, 10, 75, 23))
        self.pushButton_10.setObjectName("pushButton_10")
        self.label_7 = QtWidgets.QLabel(Form)
        self.label_7.setGeometry(QtCore.QRect(480, 50, 47, 13))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(Form)
        self.label_8.setGeometry(QtCore.QRect(480, 70, 61, 16))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(Form)
        self.label_9.setGeometry(QtCore.QRect(480, 90, 47, 13))
        self.label_9.setObjectName("label_9")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.pushButton.clicked.connect(self.insertMahasiswa) 
        self.pushButton_2.clicked.connect(self.updateMahasiswa)  
        self.pushButton_3.clicked.connect(self.deleteMahasiswa)  
        self.pushButton_4.clicked.connect(self.loadMahasiswa)  
        self.pushButton_10.clicked.connect(self.searchMahasiswa) 

        self.tableWidget.cellClicked.connect(self.getId)

    def insertMahasiswa(self):
        try:
            npm = self.lineEdit_2.text()
            nama = self.lineEdit.text()
            kelas = self.lineEdit_3.text()
            jurusan = self.lineEdit_4.text()
            tanggal_lahir = self.lineEdit_5.text()

            if not (npm and nama and kelas and jurusan and tanggal_lahir):
                self.label_6.setText("Fields cannot be empty.")
                return

            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="dbkampus"
            )
            cursor = mydb.cursor()
            sql = "INSERT INTO mahasiswa (npm, nama, kelas, jurusan, tanggal_lahir) VALUES (%s, %s, %s, %s, %s)"
            val = (npm, nama, kelas, jurusan, tanggal_lahir)
            cursor.execute(sql, val)
            mydb.commit()
            self.label_6.setText("Data mahasiswa berhasil disimpan")
            self.clearFields()
            self.loadMahasiswa() 
        except mc.Error as e:
            self.label_6.setText(f"Error: {e}")

    def updateMahasiswa(self):
        try:
            npm = self.lineEdit_2.text()  # NPM tetap dari lineEdit_2
            nama = self.lineEdit.text()
            kelas = self.lineEdit_3.text()
            jurusan = self.lineEdit_4.text()
            tanggal_lahir = self.lineEdit_5.text()

            # Validasi input
            if not (npm and nama and kelas and jurusan and tanggal_lahir):
                self.label_6.setText("Fields cannot be empty.")
                return

            # Database connection
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="dbkampus"
            )
            cursor = mydb.cursor()

            # Update query
            sql = """UPDATE mahasiswa 
                SET nama = %s, kelas = %s, jurusan = %s, tanggal_lahir = %s 
                WHERE npm = %s"""
            val = (nama, kelas, jurusan, tanggal_lahir, npm)
            cursor.execute(sql, val)
            mydb.commit()

            # Feedback
            if cursor.rowcount == 0:
                self.label_6.setText(f"NPM {npm} tidak ditemukan.")
            else:
                self.label_6.setText("Data mahasiswa berhasil diperbarui")
                self.loadMahasiswa()  # Refresh data
        except mc.Error as e:
            self.label_6.setText(f"Error: {e}")


    def deleteMahasiswa(self):
        try:
            npm = self.lineEdit_2.text()  # NPM tetap dari lineEdit_2
            if not npm:
                self.label_6.setText("NPM cannot be empty.")
                return

            # Database connection
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="dbkampus"
            )
            cursor = mydb.cursor()

            # Delete query
            sql = "DELETE FROM mahasiswa WHERE npm = %s"
            val = (npm,)
            cursor.execute(sql, val)
            mydb.commit()

            # Feedback
            if cursor.rowcount == 0:
                self.label_6.setText(f"NPM {npm} tidak ditemukan.")
            else:
                self.label_6.setText("Data mahasiswa berhasil dihapus")
                self.loadMahasiswa()  # Refresh data
                self.clearFields()  # Clear input fields
        except mc.Error as e:
            self.label_6.setText(f"Error: {e}")


    def loadMahasiswa(self):
        try:
            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="dbkampus"
            )
            mycursor = mydb.cursor()
            mycursor.execute("SELECT npm, nama, kelas, jurusan, tanggal_lahir FROM mahasiswa ORDER BY npm ASC")
            result = mycursor.fetchall()

            self.tableWidget.setRowCount(0)
            self.tableWidget.setColumnCount(5)  
            self.tableWidget.setHorizontalHeaderLabels(["NPM", "Nama", "Kelas", "Jurusan", "Tanggal Lahir"])

            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))

            self.label_6.setText("Data mahasiswa berhasil ditampilkan")
        except mc.Error as err:
            self.label_6.setText(f"Error: {err}")

    def clearFields(self):
        self.lineEdit.clear()
        self.lineEdit_2.clear()
        self.lineEdit_3.clear()
        self.lineEdit_4.clear()
        self.lineEdit_5.clear()
    
    def getId(self, row, column):
        try:
            npm = self.tableWidget.item(row, 0).text()  
            nama = self.tableWidget.item(row, 1).text()  
            kelas = self.tableWidget.item(row, 2).text()  
            jurusan = self.tableWidget.item(row, 3).text() 
            tanggal_lahir = self.tableWidget.item(row, 4).text()  

            self.lineEdit_2.setText(npm)
            self.lineEdit.setText(nama)
            self.lineEdit_3.setText(kelas)
            self.lineEdit_4.setText(jurusan)
            self.lineEdit_5.setText(tanggal_lahir)
            self.label_6.setText("DATA SUDAH DI LOAD.")
        except AttributeError:
            self.label_3.setText("Error: DATA GAGAL DI LOAD.")
    
    def searchMahasiswa(self):
        try:
            npm = self.lineEdit_2.text() 
            if not npm:
                self.label_6.setText("Silakan masukkan NPM.")
                return

            mydb = mc.connect(
                host="localhost",
                user="root",
                password="",
                database="dbkampus"
            )
            cursor = mydb.cursor()

            sql = "SELECT npm, nama, kelas, jurusan, tanggal_lahir FROM mahasiswa WHERE npm = %s"
            val = (npm,)
            cursor.execute(sql, val)
            result = cursor.fetchone()  

            self.tableWidget.setRowCount(0)
            self.tableWidget.setColumnCount(5)
            self.tableWidget.setHorizontalHeaderLabels(["NPM", "Nama", "Kelas", "Jurusan", "Tanggal Lahir"])

            if result:
                self.tableWidget.insertRow(0)
                for column_number, data in enumerate(result):
                    self.tableWidget.setItem(0, column_number, QTableWidgetItem(str(data)))
                self.label_6.setText("Data ditemukan.")
            else:
                self.label_6.setText("Data tidak ditemukan.")
        except mc.Error as e:
            self.label_6.setText(f"Error: {e}")

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "NPM"))
        self.label_2.setText(_translate("Form", "NAMA"))
        self.label_3.setText(_translate("Form", "KELAS"))
        self.label_4.setText(_translate("Form", "JURUSAN"))
        self.label_5.setText(_translate("Form", "TANGGAL LAHIR"))
        self.label_6.setText(_translate("Form", "STATUS AKAN TERLIHAT DISINI"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "npm"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "nama"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "kelas"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Form", "jurusan"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Form", "tanggal_lahir"))
        self.pushButton.setText(_translate("Form", "INSERT"))
        self.pushButton_2.setText(_translate("Form", "UPDATE"))
        self.pushButton_3.setText(_translate("Form", "DELETE"))
        self.pushButton_4.setText(_translate("Form", "LOAD DATA"))
        self.pushButton_10.setText(_translate("Form", "SEARCH"))
        self.label_7.setText(_translate("Form", "Search "))
        self.label_8.setText(_translate("Form", "Berdasarkan"))
        self.label_9.setText(_translate("Form", "NPM"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())